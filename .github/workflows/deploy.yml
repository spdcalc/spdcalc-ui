# GitHub Action to deploy the app to github pages
# first install required packages: cargo install rsw
# then bun install
# then bun run build
# then deploy to pages

name: Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [$default-branch]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: phips28/gh-action-bump-version@master

  build:
    runs-on: ubuntu-latest
    needs: bump
    steps:
      - uses: actions/checkout@v4
      - name: Install RSW from cargo
        run: cargo install rsw
      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          # Optional version of wasm-pack to install(eg. 'v0.9.1', 'latest')
          version: 'latest'
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - run: bun install
      - run: bun run build
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist/'

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


